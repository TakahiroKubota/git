#!/bin/sh

usage () {
	echo "usage:" $@
	exit 127
}

die () {
	echo $@
	exit 128
}

if test $# -lt 2 || test $# -gt 3
then
	usage "$0 <repository> <new_workdir> [<branch>]"
fi

orig_git=$1
new_workdir=$2
branch=$3

# want to make sure that what is pointed to has a .git directory ...
git_dir=$(cd "$orig_git" 2>/dev/null &&
  git rev-parse --git-dir 2>/dev/null) ||
  die "Not a git repository: \"$orig_git\""

case "$git_dir" in
.git)
	git_dir="$orig_git/.git"
	;;
.)
	git_dir=$orig_git
	;;
esac

# don't link to a configured bare repository
isbare=$(git --git-dir="$git_dir" config --bool --get core.bare)
if test ztrue = z$isbare
then
	die "\"$git_dir\" has core.bare set to true," \
		" remove from \"$git_dir/config\" to use $0"
fi

# don't link to a workdir
if test -h "$git_dir/config"
then
	die "\"$orig_git\" is a working directory only, please specify" \
		"a complete repository."
fi

# don't recreate a workdir over an existing repository
if test -e "$new_workdir"
then
	die "destination directory '$new_workdir' already exists."
fi

# create the workdir
mkdir -p "$new_workdir/.git" || die "unable to create \"$new_workdir\"!"

# get relative path from the workdir to the original repository
git_dir_fullpath=$(cd -P -- "$git_dir"; pwd)
cd -P -- "$new_workdir/.git"
common_path=$PWD
git_dir=
until
	case $git_dir_fullpath in
	$common_path/*)
		true;;
	*)
		false;;
	esac
do
	common_path=${common_path%/*} git_dir=../$git_dir
done
case $common_path in
''|/)
	git_dir=$git_dir_fullpath;;
*)
	git_dir=$git_dir${git_dir_fullpath#"$common_path/"};;
esac

# create the links to the original repo.  explicitly exclude index, HEAD and
# logs/HEAD from the list since they are purely related to the current working
# directory, and should not be shared.
for x in config refs logs/refs objects info hooks packed-refs remotes rr-cache svn
do
	case $x in
	*/*)
		mkdir -p "${x%/*}"
		ln -s -- "../$git_dir/$x" "$x"
		;;
	*)
		ln -s -- "$git_dir/$x" "$x"
		;;
	esac
done

# copy the HEAD from the original repository as a default branch
cp "$git_dir/HEAD" "$git_dir/index" .

cd ..

# checkout the branch (either the same as HEAD from the original repository, or
# the one that was asked for)
git checkout -f $branch
